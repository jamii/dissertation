dtmc

const int n = 3;

module next
	next : [0..n-1] init 0;

	[next] true -> (1/n):(next'=0) + (1/n):(next'=1) + (1/n):(next'=2);
endmodule

module poppi
	root0 : [0..n-1] init 0;
        root1 : [0..n-1] init 0;
        root2 : [0..n-1] init 0;

	node0 : [0..n-1] init 0;
       	node1 : [0..n-1] init 0;
	node2 : [0..n-1] init 0;

	// node0 contacts a root and receives a new peer selection
	[next] (next=0)&(node0=0) -> (root0'=0)&(node0'=root0);
	[next] (next=0)&(node0=1) -> (root1'=0)&(node0'=root1);
	[next] (next=0)&(node0=2) -> (root2'=0)&(node0'=root2);

	// node0 contacts a root and receives a new peer selection
	[next] (next=1)&(node1=0) -> (root0'=1)&(node1'=root0);
	[next] (next=1)&(node1=1) -> (root1'=1)&(node1'=root1);
	[next] (next=1)&(node1=2) -> (root2'=1)&(node1'=root2);
	
	// node0 contacts a root and receives a new peer selection
	[next] (next=2)&(node2=0) -> (root0'=2)&(node2'=root0);
	[next] (next=2)&(node2=1) -> (root1'=2)&(node2'=root1);
	[next] (next=2)&(node2=2) -> (root2'=2)&(node2'=root2);
       
endmodule