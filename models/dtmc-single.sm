dtmc

const int n = 3;

module next
	next : [0..n-1] init 0;

	[next] true -> (1/n):(next'=0) + (1/n):(next'=1) + (1/n):(next'=2);
endmodule

module poppi
	root : [0..n-1] init 0;

	node0 : [0..n-1] init 0;
       	node1 : [0..n-1] init 0;
	node2 : [0..n-1] init 0;

	// node0 contacts the root and receives a new peer selection
	[next] (next=0) -> (root'=0)&(node0'=root);

	// node1 contacts the root and receives a new peer selection
	[next] (next=1) -> (root'=1)&(node1'=root);
	
	// node2 contacts the root and receives a new peer selection
	[next] (next=2) -> (root'=2)&(node2'=root);
endmodule

module poppi_past
	next_past : [0..n-1] init 0;

	node0_past : [0..n-1] init 0;
       	node1_past : [0..n-1] init 0;
	node2_past : [0..n-1] init 0;

	[next] true -> (next_past'=next)&(node0_past'=node0)&(node1_past'=node1)&(node2_past'=node2);
endmodule

rewards "node0_0_0"
	(next_past=0)&(node0_past=0)&(node0=0) : 1;
endrewards