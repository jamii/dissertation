ctmc

const double cache;
const double push_self;
const double push;

module nodes
       edge_0_1 : [0..1] init 1;
       edge_0_2 : [0..1] init 1;
       edge_1_2 : [0..1] init 1;
       edge_1_0 : [0..1] init 1;
       edge_2_0 : [0..1] init 1;
       edge_2_1 : [0..1] init 1;
       
       // Forget
       [] edge_0_1=1 -> 1:(edge_0_1'=0);
       [] edge_0_2=1 -> 1:(edge_0_2'=0);
       [] edge_1_0=1 -> 1:(edge_1_0'=0);
       [] edge_1_2=1 -> 1:(edge_1_2'=0);
       [] edge_2_0=1 -> 1:(edge_2_0'=0);
       [] edge_2_1=1 -> 1:(edge_2_1'=0);

       // Cache
       [] (cache>0) & edge_0_1=0 -> cache:(edge_0_1'=1);
       [] (cache>0) & edge_0_2=0 -> cache:(edge_0_2'=1);
       [] (cache>0) & edge_1_0=0 -> cache:(edge_1_0'=1);
       [] (cache>0) & edge_1_2=0 -> cache:(edge_1_2'=1);
       [] (cache>0) & edge_2_0=0 -> cache:(edge_2_0'=1);
       [] (cache>0) & edge_2_1=0 -> cache:(edge_2_1'=1);
       
       // Push self
       [] (push_self>0) & edge_0_1=1 -> push_self:(edge_1_0'=1); 
       [] (push_self>0) & edge_1_0=1 -> push_self:(edge_0_1'=1); 
       [] (push_self>0) & edge_0_2=1 -> push_self:(edge_2_0'=1); 
       [] (push_self>0) & edge_2_0=1 -> push_self:(edge_0_2'=1); 
       [] (push_self>0) & edge_1_2=1 -> push_self:(edge_2_1'=1); 
       [] (push_self>0) & edge_2_1=1 -> push_self:(edge_1_2'=1); 

       // Push
       [] (push>0) & (edge_0_1=1) & (edge_0_2=1) -> push:(edge_1_2'=1) + push:(edge_2_1'=1);
       [] (push>0) & (edge_1_0=1) & (edge_1_2=1) -> push:(edge_0_2'=1) + push:(edge_2_0'=1);
       [] (push>0) & (edge_2_1=1) & (edge_2_0=1) -> push:(edge_1_0'=1) + push:(edge_0_1'=1);
endmodule

rewards "time"
        true:1;
endrewards

rewards "indegree"
	true:edge_1_0 + edge_2_0;
endrewards

rewards "outdegree"
	true:edge_0_1 + edge_0_2;
endrewards

rewards "density"
	true:edge_1_0 + edge_2_0 + edge_0_1 + edge_0_2 + edge_1_2 + edge_2_1;
endrewards

label "total_failure" = edge_0_1=0 & edge_0_2=0 & edge_1_0=0 & edge_1_2=0 & edge_2_0=0 & edge_2_1=0;