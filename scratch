automate prism model checking
revise proofs
rewrite maths section to include prism
	for each algorithm do:
	    check equivalence between ctmc and dtmc
	    uniform
	    independent of previous
	    		discuss why this is hard
	    independent of other current
	    non-steady state transitions
	explain fix
		non-connected
		init fixes us in one bscc
		stops the bootstrap from ever working correctly
		count states - some missing eg 0,1,2 0,1,2 which is a single bscc
	compare to random surfer model
	compare different implementations of fix wrt efficiency
intro
background
	dwell on how other people failed to do this
	mention different uses of gossip eg external vs internal
		track down the one that uses gossip to do distributed logic
		use couchdb style replication as an example
approach
	eliminate scheduling, reduce state
	use a well studied model
	inspired by radioactive decay
	note the automation of prism stuff
conclusion
	massively simpler than previous implementations
	easy to model and extend
	easy and efficient to implement
	^^ evidence that this is a good approach
	suitable only in private networks
		 poisoning
		 nat versus connection churn
typesetting, formatting, latex builds
proof reading (ideally by weekend)
extensions, given time
	    dropped messages
	    churn / persistent failure
implementation, given time
		main reason is to check that still works in face of non-perfect transition times
		 